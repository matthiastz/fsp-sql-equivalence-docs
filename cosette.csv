,,Hinweise,,,,,,,
,,"Ergebnis (0: nicht äquivalent, 1: äquivalent, (pm=0..1): tw. Äquivalent, error: Fehler → System kann Querys nicht vergleichen)",,,,,,,
,,pm = partial marking (z.B. zu 85% korrekt),,,,,,,
,,"pm, sonst 0 → falls Verfahren partielle Bewertung unterstützt wird pm erwartet, ansonsten nicht äquivalent erwartet",,,,,,,
,,,,,,,,,
,,"Name = Cosette, pm = false",,,,tats. = tatsächlich,,,
,,,,,,,,,
,,,,Ergebnis,,,,,
Mutations-Kategorie/SQL-Feature,Nr.,Query (Musterlösung),Test-Query (Kandidat),erwartet,tats.,Anmerkung,Compare,,
columns select vs. Select *,1,SELECT * FROM Album;,"SELECT AlbumId, Title, ArtistId FROM Album;",1,unknown,"{u'rosette_result': u'UNSAT', u'rosette_log': u'', u'coq_result': u'UNKNOWN', u'result': u'UNKNOWN', u'coq_log': u''}. out of time: https://github.com/uwdb/Cosette/issues/80",1,,
,2,"SELECT AlbumId, Title, ArtistId FROM Album;",SELECT * FROM Album;,1,unknown,"{u'rosette_result': u'UNSAT', u'rosette_log': u'', u'coq_result': u'UNKNOWN', u'result': u'UNKNOWN', u'coq_log': u''}
",1,,
"where: same semantic, minimal syntax change",3,"SELECT TrackId FROM PlaylistTrack 
WHERE TrackId < 100;","SELECT TrackId FROM PlaylistTrack 
WHERE TrackId <= 99;",1,error,"{u'rosette_log': u'{""size"":[1],""status"":""UNSAT""}\ngenerated/VxNmtKgrTvHqx.rkt:17:15: trackid: unbound identifier in module\n  in: trackid\n  context...:\n   /root/.racket/6.8/pkgs/rosette/rosette/base/form/module.rkt:16:0\n   standard-module-name-resolver\n   /Cosette/rosette/server.rkt:38:10\n', u'coq_result': u'ERROR', u'coq_log': u'Invalid generated Coq code. Please file an issue.', u'result': u'ERROR', u'rosette_result': u'ERROR', u'error_msg': u'Invalid generated Coq code. Please file an issue. \n \n {""size"":[1],""status"":""UNSAT""}\ngenerated/VxNmtKgrTvHqx.rkt:17:15: trackid: unbound identifier in module\n  in: trackid\n  context...:\n   /root/.racket/6.8/pkgs/rosette/rosette/base/form/module.rkt:16:0\n   standard-module-name-resolver\n   /Cosette/rosette/server.rkt:38:10\n'}
",1,,
Semicolon ;,4,SELECT Name FROM Genre;,SELECT Name FROM Genre,1,error,"{u'rosette_log': u'Syntax Error. \n ERROR: ""(line 10, column 1):\\nunexpected \'v\'\\nexpecting \\""--\\"", \\""/*\\"", \\"";\\"" or end of input""', u'coq_result': u'ERROR', u'coq_log': u'Syntax Error. \n ERROR: ""(line 10, column 1):\\nunexpected \'v\'\\nexpecting \\""--\\"", \\""/*\\"", \\"";\\"" or end of input""', u'result': u'ERROR', u'counterexamples': [], u'rosette_result': u'ERROR', u'error_msg': u'Syntax Error. \n ERROR: ""(line 10, column 1):\\nunexpected \'v\'\\nexpecting \\""--\\"", \\""/*\\"", \\"";\\"" or end of input""'}
",1,,
"syntax sql keywords (upper, lower case)",5,SELECT Name FROM MediaType;,select Name FrOm MediaType;,1,1,,0,,
column count differing,6,"SELECT InvoiceDate, BillingAddress, BillingCity FROM Invoice;","SELECT BillingAddress, BillingCity FROM Invoice;",0,0,"{u'rosette_log': u'Rosette find an counterexample.', u'coq_result': u'UNKNOWN', u'coq_log': u'', u'result': u'NEQ', u'counterexamples': [{u'table-content': [[u'invoiceid', u'customerid', u'invoicedate', u'billingaddress', u'billingcity', u'billingstate', u'billingcountry', u'billingpostalcode', u'total'], [[[0, 0, 0, 0, 0, 0, 0, 0, 0], 1]]], u'table-name': u'invoice'}], u'rosette_result': u'NEQ'}
",0,,
,7,"SELECT BillingAddress, BillingCity FROM Invoice;","SELECT InvoiceDate, BillingAddress, BillingCity FROM Invoice;",0,0,,0,,
column ordering,8,,"SELECT BillingCity, BillingAddress  FROM Invoice;",0,0,"{u'rosette_log': u'Rosette find an counterexample.', u'coq_result': u'UNKNOWN', u'coq_log': u'', u'result': u'NEQ', u'counterexamples': [{u'table-content': [[u'invoiceid', u'customerid', u'invoicedate', u'billingaddress', u'billingcity', u'billingstate', u'billingcountry', u'billingpostalcode', u'total'], [[[0, 0, 0, 1, 0, 0, 0, 0, 0], 1]]], u'table-name': u'invoice'}], u'rosette_result': u'NEQ'}
",0,,
order by,9,"SELECT TrackId, Name, GenreId from Track ORDER BY GenreId ASC;","SELECT TrackId, Name, GenreId from Track ORDER BY GenreId;",1,error,"{u'rosette_log': u'Syntax Error. \n ERROR: ""(line 7, column 61):\\nunexpected \\""b\\""\\nexpecting \\""--\\"" or \\""/*\\""""', u'coq_result': u'ERROR', u'coq_log': u'Syntax Error. \n ERROR: ""(line 7, column 61):\\nunexpected \\""b\\""\\nexpecting \\""--\\"" or \\""/*\\""""', u'result': u'ERROR', u'counterexamples': [], u'rosette_result': u'ERROR', u'error_msg': u'Syntax Error. \n ERROR: ""(line 7, column 61):\\nunexpected \\""b\\""\\nexpecting \\""--\\"" or \\""/*\\""""'}
",1,,
,10,"SELECT TrackId, Name, GenreId from Track ORDER BY GenreId DESC;","SELECT TrackId, Name, GenreId from Track;",0,error,"{u'rosette_log': u'Syntax Error. \n ERROR: ""(line 7, column 61):\\nunexpected \\""b\\""\\nexpecting \\""--\\"" or \\""/*\\""""', u'coq_result': u'ERROR', u'coq_log': u'Syntax Error. \n ERROR: ""(line 7, column 61):\\nunexpected \\""b\\""\\nexpecting \\""--\\"" or \\""/*\\""""', u'result': u'ERROR', u'counterexamples': [], u'rosette_result': u'ERROR', u'error_msg': u'Syntax Error. \n ERROR: ""(line 7, column 61):\\nunexpected \\""b\\""\\nexpecting \\""--\\"" or \\""/*\\""""'}
",1,,
,11,,"SELECT TrackId, Name, GenreId from Track ORDER BY GenreId ASC;",0,error,s.o.,1,,
Redundanzen,12,"SELECT Name, MediaTypeId FROM Track
WHERE MediaTypeId > 2;
","SELECT Name, MediaTypeId FROM Track
WHERE MediaTypeId > 2 and MediaTypeId > 1;",1,unknown,Two queries' equivalence is unknown. Solver runs out of time.,1,,
,13,,"SELECT Name, MediaTypeId FROM Track
WHERE MediaTypeId > 2 or MediaTypeId > 1;
",0,0,"{u'rosette_log': u'Rosette find an counterexample.', u'coq_result': u'UNKNOWN', u'coq_log': u'', u'result': u'NEQ', u'counterexamples': [{u'table-content': [[u'trackid', u'name', u'albumid', u'mediatypeid', u'genreid', u'composer', u'milliseconds', u'bytes', u'unitprice'], [[[0, 0, 0, 2, 0, 0, 0, 0, 0], 1]]], u'table-name': u'track'}], u'rosette_result': u'NEQ'}
",0,,
Sub-Query/Join,14,"select Track.TrackId, Track.Name, Track.Composer  from Track 
join (select MediaType.MediaTypeId,  MediaType.Name from MediaType where MediaType.Name = 'AAC audio file')
as t_MediaType ON Track.MediaTypeId = t_MediaType.MediaTypeId;","select Track.TrackId, Track.Name, Track.Composer   from Track 
join (select MediaType.MediaTypeId,  MediaType.Name from MediaType)
as t_MediaType ON Track.MediaTypeId = t_MediaType.MediaTypeId;
",0,0,"{u'rosette_log': u'Rosette find an counterexample.', u'coq_result': u'UNKNOWN', u'coq_log': u'', u'result': u'NEQ', u'counterexamples': [{u'table-content': [[u'mediatypeid', u'name'], [[[0, 0], 13]]], u'table-name': u'mediatype'}, {u'table-content': [[u'trackid', u'name', u'albumid', u'mediatypeid', u'genreid', u'composer', u'milliseconds', u'bytes', u'unitprice'], [[[0, 0, 0, 0, 0, 0, 0, 0, 0], 10]]], u'table-name': u'track'}], u'rosette_result': u'NEQ'}",0,,Hinweis counter example korrekt/sinnvoll?
,15,,"select Track.TrackId, Track.Name, Track.Composer  from Track 
Join MediaType ON Track.MediaTypeId = MediaType.MediaTypeId;

",0,0,"{u'rosette_log': u'Rosette find an counterexample.', u'coq_result': u'UNKNOWN', u'coq_log': u'', u'result': u'NEQ', u'counterexamples': [{u'table-content': [[u'mediatypeid', u'name'], [[[0, 0], 13]]], u'table-name': u'mediatype'}, {u'table-content': [[u'trackid', u'name', u'albumid', u'mediatypeid', u'genreid', u'composer', u'milliseconds', u'bytes', u'unitprice'], [[[0, 0, 0, 0, 0, 0, 0, 0, 0], 10]]], u'table-name': u'track'}], u'rosette_result': u'NEQ'}",0,,
,16,,"select Track.TrackId, Track.Name, Track.Composer  from Track 
join MediaType
ON Track.MediaTypeId = MediaType.MediaTypeId
WHERE MediaType.Name = 'AAC audio file';

",1,unknown,"{u'rosette_result': u'UNSAT', u'rosette_log': u'', u'coq_result': u'UNKNOWN', u'result': u'UNKNOWN', u'coq_log': u''}
 (solver runs out of time)",1,,
,17,,"select Track.TrackId, Track.Name, Track.Composer  from Track 
join MediaType
ON Track.MediaTypeId = MediaType.MediaTypeId
AND MediaType.Name = 'AAC audio file';


",1,unknown,"{u'rosette_result': u'UNSAT', u'rosette_log': u'', u'coq_result': u'UNKNOWN', u'result': u'UNKNOWN', u'coq_log': u''}
  Two queries' equivalence is unknown. Solver runs out of time.

",1,,
,18,,"select Track.TrackId, Track.Name, Track.Composer
from Track, MediaType
where
Track.MediaTypeId = MediaType.MediaTypeId
and 
(MediaType.Name = 'AAC audio file')",1,unknown,"{u'rosette_result': u'UNSAT', u'rosette_log': u'', u'coq_result': u'UNKNOWN', u'result': u'UNKNOWN', u'coq_log': u''}
  Two queries' equivalence is unknown. Solver runs out of time.

",1,,
distinct,19,SELECT DISTINCT PlaylistId FROM PlaylistTrack;,SELECT  PlaylistId FROM PlaylistTrack;,0,0,"Two queries are not equivalent.

Counter Examples: (i.e., input tables that, when fed into your input queries, will return different results)

Table playlisttrack

playlistidtrackid
00
00",0,,
"where, and",20,"SELECT * FROM Employee
WHERE Title = 'Sales Support Agent';",SELECT * FROM Employee;,0,0,"keine Where-Klausel. Ergebnis: Two queries are not equivalent.

Counter Examples: (i.e., input tables that, when fed into your input queries, will return different results)

Table employee

employeeidlastnamefirstnametitlereportstobirthdatehiredateaddresscitystatecountrypostalcodephonefaxemail
000000000000000
?? ",0,,
,21,,"SELECT * FROM Employee
WHERE ReportsTo = 2;

",0,0,"zufällig gleiches Ergebnis-Set aber andere Syntax & Semantik Two queries are not equivalent.  Counter Examples: (i.e., input tables that, when fed into your input queries, will return different results)  Table employee  employeeid lastname firstname title reportsto birthdate hiredate address city state country postalcode phone fax email 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 ??",0,,
,22,"SELECT Email FROM Employee
WHERE City = 'Calgary' AND ReportsTo = 1;
","SELECT Email FROM Employee
WHERE City = 'Calgary';
",0,0,"counterexamples': [{u'table-content': [[u'employeeid', u'lastname', u'firstname', u'title', u'reportsto', u'birthdate', u'hiredate', u'address', u'city', u'state', u'country', u'postalcode', u'phone', u'fax', u'email'], [[[0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 1]]], u'table-name': u'employee'}], u'rosette_result': u'NEQ'}
",0,,
or,23,"SELECT LastName, FirstName, City FROM Employee
WHERE City = 'Edmonton' OR City  = 'Lethbridge';","SELECT LastName, FirstName, City FROM Employee
WHERE City = 'Edmonton';",0,0,,0,,
,24,,"SELECT LastName, FirstName, City FROM Employee
WHERE City = 'Edmonton' OR City = 'Calgary';",0,0,,0,,
not,25,"SELECT LastName, FirstName, City FROM Employee
WHERE NOT City = 'Calgary';","SELECT LastName, FirstName, City FROM Employee
WHERE City = 'Lethbridge' OR City = 'Edmonton';",0,0,zufällig gleiches Ergebnis-Set aber andere Syntax & Semantik → Test für Verfahren mit pragmatischen Ansatz,0,,
,26,,"SELECT LastName, FirstName, City FROM Employee
WHERE NOT City = 'Edmonton';",0,0,,0,,
limit,27,"SELECT LastName, FirstName, City FROM Employee
LIMIT 3;","SELECT LastName, FirstName, City FROM Employee
LIMIT 4;
",0,error,kein Support für LIMIT,1,,
,28,,"SELECT LastName, FirstName, City FROM Employee;",0,error,kein Support für LIMIT,1,,
"min, max",29,SELECT MIN(UnitPrice) FROM InvoiceLine;,SELECT UnitPrice FROM InvoiceLine LIMIT 1;,0,error,zufällig gleiches Ergebnis-Set aber andere Syntax & Semantik → kein Support für LIMIT,1,,
,30,,SELECT MAX(UnitPrice) FROM InvoiceLine;,0,0,"Two queries are not equivalent.

Counter Examples: (i.e., input tables that, when fed into your input queries, will return different results)

Table invoiceline

invoicelineidinvoiceidtrackidunitpricequantity
-10-101
01010
??",0,,
,31,SELECT MAX(UnitPrice) FROM InvoiceLine;,SELECT UnitPrice FROM InvoiceLine LIMIT 1;,0,error,kein Support für LIMIT,1,,
count,32,"SELECT COUNT(UnitPrice) FROM InvoiceLine WHERE UnitPrice = 0.99;
",SELECT UnitPrice FROM InvoiceLine WHERE UnitPrice = 0.99;,0,error,kein Support für float/numeric,1,,
avg,33,"SELECT avg(Total) FROM Invoice;
",SELECT Total FROM Invoice;,0,error,kein Support für avg,1,,
sum,34,SELECT sum(Total) FROM Invoice;,,0,0,,0,,
like,35,"SELECT ArtistId, Name FROM Artist WHERE Name LIKE '%Metal%';","SELECT ArtistId, Name FROM Artist;",0,error,kein Support für LIKE,1,,
,36,"SELECT ArtistId, Name FROM Artist
WHERE Name LIKE 'Sant%';","SELECT ArtistId, Name FROM Artist
WHERE Name LIKE 'San%';",0,error,kein Support für LIKE,1,,
,37,"SELECT ArtistId, Name FROM Artist
WHERE Name LIKE 'M%o';
","SELECT ArtistId, Name FROM Artist
WHERE Name LIKE 'M%';",0,error,kein Support für LIKE,1,,
,38,"SELECT ArtistId, Name FROM Artist
WHERE Name LIKE '_ %';","SELECT ArtistId, Name FROM Artist
WHERE Name LIKE '_%';",0,error,kein Support für LIKE,1,,
in,39,"SELECT InvoiceId, InvoiceDate, BillingCountry FROM Invoice 
WHERE BillingCountry IN ('USA', 'Canada', 'Brazil');","SELECT InvoiceId, InvoiceDate, BillingCountry FROM Invoice;",0,error,kein Support für IN,1,,
,40,,"SELECT InvoiceId, InvoiceDate, BillingCountry FROM Invoice 
WHERE BillingCountry IN ('USA', 'Brazil');",0,error,kein Support für IN,1,,
between,41,"SELECT InvoiceId, InvoiceDate, BillingCountry FROM Invoice
WHERE InvoiceDate between '2012-06-04 00:00:00' AND '2012-07-28 00:00:00';","SELECT InvoiceId, InvoiceDate, BillingCountry FROM Invoice;",0,error,kein Support für between,1,,
,42,,"SELECT InvoiceId, InvoiceDate, BillingCountry FROM Invoice
WHERE InvoiceDate between '2012-05-04 00:00:00' AND '2012-07-28 00:00:00';
",0,error,kein Support für between,1,,
,43,"SELECT InvoiceId, CustomerId FROM Invoice
WHERE InvoiceId between 50 AND 100;","SELECT InvoiceId, CustomerId FROM Invoice
WHERE InvoiceId between 0 AND 120;
",0,error,kein Support für between,1,,
column alias,44,SELECT Name AS Genres FROM Genre;,SELECT Name AS Genre FROM Genre;,0,1,,1,,
union,45,"SELECT City FROM Customer
UNION 
SELECT City FROM Employee;",SELECT City FROM Customer;,0,error,kein Support für UNION,1,,
,46,,"SELECT City FROM Customer
UNION 
SELECT BillingCity FROM Invoice;",0,error,kein Support für UNION,1,,
,47,"SELECT City FROM Customer
UNION ALL
SELECT City FROM Employee;
","SELECT City FROM Customer
UNION 
SELECT City FROM Employee;
",0,error,kein Support für UNION,1,,
"group by, having",49,"SELECT InvoiceId, CustomerId, count(CustomerId) FROM Invoice GROUP BY CustomerId; ","SELECT InvoiceId, CustomerId, count(CustomerId) FROM Invoice
GROUP BY InvoiceId;",0,0,,0,,
,50,"SELECT CustomerId, count(CustomerId) FROM Invoice
group by CustomerId
having count(CustomerId) < 7;","SELECT CustomerId, count(CustomerId) FROM Invoice
group by CustomerId;",0,0,"Two queries are not equivalent.

Counter Examples: (i.e., input tables that, when fed into your input queries, will return different results)

Table invoice

invoiceidcustomeridinvoicedatebillingaddressbillingcitybillingstatebillingcountrybillingpostalcodetotal
000000000
000000000
000000000
000000000
000000000
000000000
000000000",0,,
,51,,"SELECT CustomerId, count(CustomerId) FROM Invoice
group by CustomerId
having count(CustomerId) > 1;",0,0,See #50,0,,
exists,52,"SELECT TrackID, Name, GenreID 
FROM Track
WHERE EXISTS
(SELECT GenreID FROM Genre WHERE Track.GenreId = Genre.GenreId AND (Genre.Name = 'Reggae' OR Genre.Name = 'Jazz') );","SELECT TrackID, Name, GenreID 
FROM Track
WHERE EXISTS
(SELECT GenreID FROM Genre WHERE Track.GenreId = Genre.GenreId AND Genre.Name = 'Reggae' OR Genre.Name = 'Jazz');",0,unknown,,1,,
,53,,"SELECT TrackID, Name, GenreID 
FROM Track;",0,0,,0,,
,54,,"SELECT TrackID, Name, GenreID 
FROM Track
WHERE GenreID IN
(SELECT GenreID FROM Genre WHERE Track.GenreId = Genre.GenreId AND (Genre.Name = 'Reggae' OR Genre.Name = 'Jazz') );",1,error,kein Support für IN,1,,
"Inner, left, self join",55,"SELECT PlaylistTrack.PlaylistId, Track.TrackId, Track.Name, Genre.Name FROM 
( (PlaylistTrack INNER JOIN Track ON PlaylistTrack.TrackId = Track.TrackId)
  INNER join
  Genre ON Genre.GenreId = Track.GenreId
);","SELECT PlaylistTrack.PlaylistId, Track.TrackId, Track.Name, Genre.Name FROM 
( (PlaylistTrack JOIN Track ON PlaylistTrack.TrackId = Track.TrackId)
  INNER join
  Genre ON  Track.GenreId = Genre.GenreId 
);",1,unknown,internal error: out of time,1,,
,56,"SELECT Customer.CustomerId, Invoice.InvoiceId
FROM Customer LEFT JOIN Invoice
ON Customer.CustomerId = Invoice.InvoiceId","SELECT Customer.CustomerId, Invoice.InvoiceId
FROM Customer LEFT OUTER JOIN Invoice
ON Customer.CustomerId = Invoice.InvoiceId",1,error,,1,,
,57,"SELECT A.FirstName AS CustomerName1, B.FirstName AS CustomerName2, A.City
FROM Customer A, Customer B
WHERE A.CustomerID != B.CustomerID
AND A.City = B.City 
ORDER BY A.City;","SELECT X.FirstName AS CustomerName1, Y.FirstName AS CustomerName2, Y.City
FROM Customer X, Customer Y
WHERE Y.CustomerID <> X.CustomerID
AND X.City = Y.City 
ORDER BY Y.City;",1,error,kein support für ORDER BY,1,,
to much joins,58,"SELECT PlaylistTrack.PlaylistId, Track.TrackId, Track.Name FROM 
(PlaylistTrack INNER JOIN Track ON PlaylistTrack.TrackId = Track.TrackId
);
","SELECT PlaylistTrack.PlaylistId, Track.TrackId, Track.Name, Genre.Name FROM 
( (PlaylistTrack INNER JOIN Track ON PlaylistTrack.TrackId = Track.TrackId)
  INNER join
  Genre ON Genre.GenreId = Track.GenreId
);
",0,0,,0,,
,,,,,,,,%,
,,,,,,Expected != actual: ,35,"61,4",
,,,,,,error,34,"59,6",
